[{"path":"https://gesiscss.github.io/tubecleanR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Julian Kohne. Maintainer.","code":""},{"path":"https://gesiscss.github.io/tubecleanR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Breuer JKJ (2024). tubecleanR: Parsing Preprocessing YouTube Comment Data. R package version 0.1.0, https://gesiscss.github.io/tubecleanR/.","code":"@Manual{,   title = {tubecleanR: Parsing and Preprocessing YouTube Comment Data},   author = {Julian Kohne; Johannes Breuer},   year = {2024},   note = {R package version 0.1.0},   url = {https://gesiscss.github.io/tubecleanR/}, }"},{"path":"https://gesiscss.github.io/tubecleanR/index.html","id":"tubecleanr","dir":"","previous_headings":"","what":"Parsing and Preprocessing YouTube Comment Data","title":"Parsing and Preprocessing YouTube Comment Data","text":"mini R package cleaning preprocess YouTube comment data collected R packages tuber vosonSML. package collection several functions developed several workshops collecting analyzing YouTube data GESIS - Leibniz Institute Social Sciences. main function package parse_yt_comments() takes dataframe containing YouTube comments collected tuber vosonSML input outputs processed dataframe URLs/links, video timestamps user mentions, emoticons, emoji extracted comments separate colums. addition , function creates columns containing textual descriptions emoji, another one containing cleaned version comment elements listed well numbers punctuation removed. Please note: functions package heavily dependent structure data exports tuber vosonSML, , extension, structure YouTube API. interested becoming maintainer package, feel free contact us.","code":""},{"path":"https://gesiscss.github.io/tubecleanR/index.html","id":"id_1-installation","dir":"","previous_headings":"","what":"1) Installation","title":"Parsing and Preprocessing YouTube Comment Data","text":"","code":"# GitHub version  library(remotes)  remotes::install_github(\"gesiscss/tubecleanR\")"},{"path":"https://gesiscss.github.io/tubecleanR/index.html","id":"id_2-demo-data","dir":"","previous_headings":"","what":"2) Demo data","title":"Parsing and Preprocessing YouTube Comment Data","text":"created simulated YouTube comment data tuber vosonSML formats","code":"# attaching package library(tubecleanR)  # Checking example comments bundled with the package View(tuberComments) View(vosonComments)  # Parsing comments tuber_parsed <- parse_yt_comments(tuberComments) voson_parsed <- parse_yt_comments(vosonComments)  # Checking parsed versions of example comments View(tuber_parsed) View(Voson_parsed)"},{"path":"https://gesiscss.github.io/tubecleanR/index.html","id":"id_3-using-your-own-data","dir":"","previous_headings":"","what":"3) Using your own data","title":"Parsing and Preprocessing YouTube Comment Data","text":"parse_yt_comments() function meant used YouTube comment data collected get_all_comments() function tuber Collect() function vosonSML. require access credentials YouTube API. Check documentation two packages details. want learn getting access YouTube API, collecting comment () data API using R, processing exploring resulting data, can also check materials workshop.","code":""},{"path":"https://gesiscss.github.io/tubecleanR/reference/VosonComments.html","id":null,"dir":"Reference","previous_headings":"","what":"vosonComments — VosonComments","title":"vosonComments — VosonComments","text":"example dataset showcase structure YouTube comments extracted using Collect  function vosonSML package.","code":""},{"path":"https://gesiscss.github.io/tubecleanR/reference/VosonComments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vosonComments — VosonComments","text":"","code":"VosonComments"},{"path":"https://gesiscss.github.io/tubecleanR/reference/VosonComments.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"vosonComments — VosonComments","text":"data frame 24 rows 12 columns: Comment Content comment AuthorDisplayName Displayed name comment author AuthorProfileImageUrl URL comment author's profile picture AuthorChannelUrl URL comment author's channel AuthorChannelID Unique ID comment author's channel ReplyCount Number replies comment LikeCount Number likes comment PublishedAt Date time comment published UpdatedAt Date time comment last updated CommentID Unique ID comment ParentID Unique ID comment comment reply VideoID Unique ID video comment reply","code":""},{"path":"https://gesiscss.github.io/tubecleanR/reference/VosonComments.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"vosonComments — VosonComments","text":"data modeled resemble random subset 24 comments following YouTube video: https://www.youtube.com/watch?v=1aheRpmurAo, exported tuber package. manually recreated comply YouTube's terms service still preserving general structure demonstration purposes.","code":""},{"path":"https://gesiscss.github.io/tubecleanR/reference/parse_yt_comments.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse YouTube Comments — parse_yt_comments","title":"Parse YouTube Comments — parse_yt_comments","text":"function processes dataframe YouTube comments, extracting cleaning various elements emojis, emoticons, URLs, timestamps, user mentions. supports comment dataframes created get_all_comments,get_comments Collect functions.","code":""},{"path":"https://gesiscss.github.io/tubecleanR/reference/parse_yt_comments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse YouTube Comments — parse_yt_comments","text":"","code":"parse_yt_comments(data, package = \"auto\", verbose = FALSE)"},{"path":"https://gesiscss.github.io/tubecleanR/reference/parse_yt_comments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse YouTube Comments — parse_yt_comments","text":"data dataframe containing YouTube comments. structure dataframe conform output 'tuber' 'vosonSML' package. package character string specifying package used collect comment data. default value \"auto\", automatically detects package based structure `data`. possible values \"tuber\" \"vosonSML\". verbose logical parameter. TRUE, function prints progress reports console.","code":""},{"path":"https://gesiscss.github.io/tubecleanR/reference/parse_yt_comments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse YouTube Comments — parse_yt_comments","text":"dataframe original comment data additional columns cleaned comments, emojis, emoji descriptions, emoticons, URLs, timestamps, user mentions. dataframe also includes metadata attributes, origin package, tubecleanR version, counts comments, links, emojis, emoticons, user mentions, timestamps.","code":""},{"path":"https://gesiscss.github.io/tubecleanR/reference/parse_yt_comments.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Parse YouTube Comments — parse_yt_comments","text":"function requires 'tuber' 'vosonSML' package data collection. 'tubecleanR' minipackage meant processing YouTube comment data.","code":""},{"path":"https://gesiscss.github.io/tubecleanR/reference/parse_yt_comments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse YouTube Comments — parse_yt_comments","text":"","code":"# Loading example comments bundled with the package tuber_comments <- readRDS(system.file(\"tuberComments.rds\", package = \"tubecleanR\"))  # parsing comments parsed_comments <- parse_yt_comments(tuber_comments)"},{"path":"https://gesiscss.github.io/tubecleanR/reference/parsetuber.html","id":null,"dir":"Reference","previous_headings":"","what":"parsetuber — parsetuber","title":"parsetuber — parsetuber","text":"Processed version tuberComments dataset.","code":""},{"path":"https://gesiscss.github.io/tubecleanR/reference/parsetuber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parsetuber — parsetuber","text":"","code":"parsetuber"},{"path":"https://gesiscss.github.io/tubecleanR/reference/parsetuber.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"parsetuber — parsetuber","text":"data frame 24 rows 15 columns: VideoID ID YouTube video comment posted . Author Username commenter. OriginalText Comment text including user mentions, timestamps, emoji, numbers, ascii-art etc. CleanedText Preprocessed version comments, excluding non-word strings characters. Emoji List emoji extracted comments EmojiDescription List textual descriptions emoji extracted comments. Emoticons List emoticons extracted comments. LikeCount Number likes comment received. URL List URLs extracted comments. Timestamps List timestamps extracted comments. UserMentions List user mentions extracted comments. Published Timestamp comment posted. Updated Timestamp comment last updated. ParentId ID parent comment, comment reply previous comment. CommentID Unique ID comment","code":""},{"path":"https://gesiscss.github.io/tubecleanR/reference/parsetuber.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"parsetuber — parsetuber","text":"Result running parse_yt_comments(tuberComments)","code":""},{"path":"https://gesiscss.github.io/tubecleanR/reference/parsevoson.html","id":null,"dir":"Reference","previous_headings":"","what":"parsevoson — parsevoson","title":"parsevoson — parsevoson","text":"detailed description dataset. Explain dataset , columns represent, source data, relevant information.","code":""},{"path":"https://gesiscss.github.io/tubecleanR/reference/parsevoson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parsevoson — parsevoson","text":"","code":"parsevoson"},{"path":"https://gesiscss.github.io/tubecleanR/reference/parsevoson.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"parsevoson — parsevoson","text":"data frame 24 rows 15 columns: VideoID ID YouTube video comment posted . Author Username commenter. OriginalText Comment text including user mentions, timestamps, emoji, numbers, ascii-art etc. CleanedText Preprocessed version comments, excluding non-word strings characters. Emoji List emoji extracted comments EmojiDescription List textual descriptions emoji extracted comments. Emoticons List emoticons extracted comments. LikeCount Number likes comment received. URL List URLs extracted comments. Timestamps List timestamps extracted comments. UserMentions List user mentions extracted comments. Published Timestamp comment posted. Updated Timestamp comment last updated. ParentId ID parent comment, comment reply previous comment. CommentID Unique ID comment","code":""},{"path":"https://gesiscss.github.io/tubecleanR/reference/parsevoson.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"parsevoson — parsevoson","text":"Result running parse_yt_comments(vosonComments)","code":""},{"path":"https://gesiscss.github.io/tubecleanR/reference/tuberComments.html","id":null,"dir":"Reference","previous_headings":"","what":"tuberComments — tuberComments","title":"tuberComments — tuberComments","text":"example dataset showcase structure YouTube comments extracted using get_comments get_comments_all  function tuber package.","code":""},{"path":"https://gesiscss.github.io/tubecleanR/reference/tuberComments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tuberComments — tuberComments","text":"","code":"tuberComments"},{"path":"https://gesiscss.github.io/tubecleanR/reference/tuberComments.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"tuberComments — tuberComments","text":"data frame 24 rows 16 columns: channelId ID Channel Video posted . videoId ID Video comments posted textDisplay HTML formatted version comment text textOriginal Comment text displayed users, without HTML formatting authorDisplayName display name user posted comment. authorProfileImageUrl URL avatar user posted comment authorChannelUrl URL channel comment author authorChannelId.value ID comment author's YouTube channel, available canRate setting indicates whether current viewer can rate comment viewerRating rating viewer given comment likeCount total number likes (positive ratings) comment received publishedAt Date time comment posted updatedAt Date time comment last updated id ID comment parentId ID parent comment, comment reply moderationStatus comment's moderation status. property returned API request authorized owner channel video requested comments made","code":""},{"path":"https://gesiscss.github.io/tubecleanR/reference/tuberComments.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"tuberComments — tuberComments","text":"data modeled resemble random subset 24 comments following YouTube video: https://www.youtube.com/watch?v=1aheRpmurAo, exported tuber package. manually recreated comply YouTube's terms service still preserving general structure demonstration purposes.","code":""}]
